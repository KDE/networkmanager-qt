/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Source file was org.freedesktop.NetworkManager.WifiP2PPeer.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef WIFIP2PPEERINTERFACE_H
#define WIFIP2PPEERINTERFACE_H

#include "generictypes.h"
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QObject>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.NetworkManager.WifiP2PPeer
 */
class OrgFreedesktopNetworkManagerWifiP2PPeerInterface : public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
#ifdef NMQT_STATIC
    {
        return "org.kde.network.WifiP2PPeer";
    }
#else
    {
        return "org.freedesktop.NetworkManager.WifiP2PPeer";
    }
#endif
public:
    OrgFreedesktopNetworkManagerWifiP2PPeerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopNetworkManagerWifiP2PPeerInterface();

    Q_PROPERTY(uint Flags READ flags)
    inline uint flags() const
    {
        return qvariant_cast<uint>(property("Flags"));
    }

    Q_PROPERTY(QString HwAddress READ hwAddress)
    inline QString hwAddress() const
    {
        return qvariant_cast<QString>(property("HwAddress"));
    }

    Q_PROPERTY(int LastSeen READ lastSeen)
    inline int lastSeen() const
    {
        return qvariant_cast<int>(property("LastSeen"));
    }

    Q_PROPERTY(QString Manufacturer READ manufacturer)
    inline QString manufacturer() const
    {
        return qvariant_cast<QString>(property("Manufacturer"));
    }

    Q_PROPERTY(QString Model READ model)
    inline QString model() const
    {
        return qvariant_cast<QString>(property("Model"));
    }

    Q_PROPERTY(QString ModelNumber READ modelNumber)
    inline QString modelNumber() const
    {
        return qvariant_cast<QString>(property("ModelNumber"));
    }

    Q_PROPERTY(QString Name READ name)
    inline QString name() const
    {
        return qvariant_cast<QString>(property("Name"));
    }

    Q_PROPERTY(QString Serial READ serial)
    inline QString serial() const
    {
        return qvariant_cast<QString>(property("Serial"));
    }

    Q_PROPERTY(uchar Strength READ strength)
    inline uchar strength() const
    {
        return qvariant_cast<uchar>(property("Strength"));
    }

    Q_PROPERTY(QByteArray WfdIEs READ wfdIEs)
    inline QByteArray wfdIEs() const
    {
        return qvariant_cast<QByteArray>(property("WfdIEs"));
    }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void PropertiesChanged(const QVariantMap &properties);
};

#endif
